{"ast":null,"code":"var _jsxFileName = \"/Users/jeyhun/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 7/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetcher = () => {\n  _s();\n  const url = \"https://imdb-top-100-movies.p.rapidapi.com/\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"bf647e4a99msha8138dcc8cc2a78p1c5356jsn037d99130b76\",\n      \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\"\n    }\n  };\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  // const fetchData = async () => {\n  //   try {\n  //     const response = await fetch(url, options); // Replace with your API endpoint\n  //     if (!response.ok) {\n  //       throw new Error(\"Network response was not ok.\");\n  //     }\n  //     const data = await response.json();\n  //     console.log(data);\n  //     setData(data);\n  //     setLoading(false);\n  //   } catch (error) {\n  //     setError(error.message);\n  //     console.log(error);\n  //     setLoading(false);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.title, \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)), \" \", \"Hello\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetcher, \"vKwid/kemsm5xYyQDp+1Kw5Wct4=\");\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","jsxDEV","_jsxDEV","DataFetcher","_s","url","options","method","headers","data","setData","loading","setLoading","error","setError","children","style","width","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","map","item","title","id","_c","$RefreshReg$"],"sources":["/Users/jeyhun/Desktop/Новая папка 7/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nconst DataFetcher = () => {\n  const url = \"https://imdb-top-100-movies.p.rapidapi.com/\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"bf647e4a99msha8138dcc8cc2a78p1c5356jsn037d99130b76\",\n      \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\",\n    },\n  };\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, []);\n\n  // const fetchData = async () => {\n  //   try {\n  //     const response = await fetch(url, options); // Replace with your API endpoint\n  //     if (!response.ok) {\n  //       throw new Error(\"Network response was not ok.\");\n  //     }\n  //     const data = await response.json();\n  //     console.log(data);\n  //     setData(data);\n  //     setLoading(false);\n  //   } catch (error) {\n  //     setError(error.message);\n  //     console.log(error);\n  //     setLoading(false);\n  //   }\n  // };\n\n  return (\n    <div>\n      {loading ? (\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n          <Card.Body>\n            <Card.Title>Card Title</Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n            <Button variant=\"primary\">Go somewhere</Button>\n          </Card.Body>\n        </Card>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <p>\n          {data.map((item) => (\n            <li key={item.id}>\n              {item.title},<button>{item.id}</button>\n            </li>\n          ))}{\" \"}\n          Hello\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default DataFetcher;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
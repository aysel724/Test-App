{"ast":null,"code":"var _jsxFileName = \"/Users/jeyhun/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 7/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataFetcher = () => {\n  _s();\n  const url = \"https://imdb-top-100-movies.p.rapidapi.com/\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"bf647e4a99msha8138dcc8cc2a78p1c5356jsn037d99130b76\",\n      \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\"\n    }\n  };\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url, options); // Replace with your API endpoint\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok.\");\n      }\n      const data = await response.json();\n      console.log(data);\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: \"18rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: item.big_image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  children: \"Go somewhere\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DataFetcher, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = DataFetcher;\nexport default DataFetcher;\nvar _c;\n$RefreshReg$(_c, \"DataFetcher\");","map":{"version":3,"names":["React","useEffect","useState","Button","Card","Container","Row","Col","jsxDEV","_jsxDEV","DataFetcher","_s","url","options","method","headers","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","json","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","map","item","style","width","Img","variant","src","big_image","Body","Title","title","Text","description","_c","$RefreshReg$"],"sources":["/Users/jeyhun/Desktop/Новая папка 7/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst DataFetcher = () => {\n  const url = \"https://imdb-top-100-movies.p.rapidapi.com/\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"bf647e4a99msha8138dcc8cc2a78p1c5356jsn037d99130b76\",\n      \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\",\n    },\n  };\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(url, options); // Replace with your API endpoint\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok.\");\n      }\n      const data = await response.json();\n      console.log(data);\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading</p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <div>\n          <Container fluid=\"md\">\n            <Row>\n              <Col>\n                {data.map((item) => (\n                  <Card style={{ width: \"18rem\" }}>\n                    <Card.Img variant=\"top\" src={item.big_image} />\n                    <Card.Body>\n                      <Card.Title>{item.title}</Card.Title>\n                      <Card.Text>{item.description}</Card.Text>\n                      <Button variant=\"primary\">Go somewhere</Button>\n                    </Card.Body>\n                  </Card>\n                ))}\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataFetcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,GAAG,GAAG,6CAA6C;EACzD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdqB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC;MAC5C,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,MAAMV,IAAI,GAAG,MAAMO,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;MACjBC,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MACvBF,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MAClBD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAsB,QAAA,EACGb,OAAO,gBACNT,OAAA;MAAAsB,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACZf,KAAK,gBACPX,OAAA;MAAAsB,QAAA,GAAG,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAErB1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA,CAACJ,SAAS;QAAC+B,KAAK,EAAC,IAAI;QAAAL,QAAA,eACnBtB,OAAA,CAACH,GAAG;UAAAyB,QAAA,eACFtB,OAAA,CAACF,GAAG;YAAAwB,QAAA,EACDf,IAAI,CAACqB,GAAG,CAAEC,IAAI,iBACb7B,OAAA,CAACL,IAAI;cAACmC,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAQ,CAAE;cAAAT,QAAA,gBAC9BtB,OAAA,CAACL,IAAI,CAACqC,GAAG;gBAACC,OAAO,EAAC,KAAK;gBAACC,GAAG,EAAEL,IAAI,CAACM;cAAU;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC/C1B,OAAA,CAACL,IAAI,CAACyC,IAAI;gBAAAd,QAAA,gBACRtB,OAAA,CAACL,IAAI,CAAC0C,KAAK;kBAAAf,QAAA,EAAEO,IAAI,CAACS;gBAAK;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eACrC1B,OAAA,CAACL,IAAI,CAAC4C,IAAI;kBAAAjB,QAAA,EAAEO,IAAI,CAACW;gBAAW;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACzC1B,OAAA,CAACN,MAAM;kBAACuC,OAAO,EAAC,SAAS;kBAAAX,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9DID,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAgEjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}